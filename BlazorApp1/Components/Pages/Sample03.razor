@page "/Sample03"
@using BlazorApp1.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid

@* アプリケーションサービス *@
@inject IDbContextFactory<PubsDbContext> DbFactory

<h3>Sample03 : ソート</h3>
<!-- https://aspnet.github.io/quickgridsamples/sorting -->

@if (authors == null)
{
    <div>データロード中...</div>
}
else
{
    <div>
        <QuickGrid Items="@authors">
            <!-- PropertyColumn では Sortable=true の指定だけでよい -->
            <PropertyColumn Property="@(a => a.AuthorId)" Title="著者ID" Sortable="true" />
            <!-- TemplateColumn では Sortable=true に加えてソート条件オブジェクトの指定が必要。GridSort<T> の static メソッドによりソート条件オブジェクトを生成できる -->
            <TemplateColumn Title="著者名" Sortable="true" SortBy="@(GridSort<Author>.ByAscending(a => a.AuthorFirstName).ThenAscending(a => a.AuthorLastName))">
                @(context.AuthorFirstName) @(context.AuthorLastName)
            </TemplateColumn>
            <PropertyColumn Property="@(a => a.Phone)" Title="電話番号" Sortable="true" />
            <PropertyColumn Property="@(a => a.State)" Title="州" Sortable="true" />
            <TemplateColumn Title="契約有無" Sortable="true" SortBy="@(GridSort<Author>.ByAscending(a => a.Contract))">
                <input type="checkbox" disabled value="@(context.Contract)" />
                @(context.Contract ? "契約あり" : "契約なし")
            </TemplateColumn>
        </QuickGrid>
    </div>
}

@code {
    private IQueryable<Author>? authors = null;

    protected override async Task OnInitializedAsync()
    {
        await using var pubs = DbFactory.CreateDbContext();
        authors = (await pubs.Authors.ToListAsync()).AsQueryable();
    }
}
